#!/usr/bin/env node

if (
  !process.argv.includes("pre-commit") &&
  !process.argv.includes("post-commit")
) {
  console.log(`
▄▄▄         ▄· ▄▌ ▄▄▄· ▄▄▌
▀▄ █·▪     ▐█▪██▌▐█ ▀█ ██•
▐▀▀▄  ▄█▀▄ ▐█▌▐█▪▄█▀▀█ ██▪
▐█•█▌▐█▌.▐▌ ▐█▀·.▐█ ▪▐▌▐█▌▐▌
.▀  ▀ ▀█▄▀▪  ▀ •  ▀  ▀ .▀▀▀
`);
}

const { spawn, spawnSync } = require("child_process");
const { existsSync } = require("fs");
const { join } = require("path");

const basePath = join(process.cwd(), ".output", ".cache", "base", "main.js");
const args = process.argv.slice(2);

const main = async () => {
  if (!existsSync(join(process.cwd(), "node_modules"))) {
    await new Promise((resolve) => {
      const pnpm = spawn("pnpm", ["i"], { stdio: "inherit", shell: true });
      pnpm.on("exit", resolve);
    });
  }

  while (true) {
    const build = spawn(
      process.execPath,
      ["-r", "@swc-node/register", "pkgs/base/src/build-main.ts", ...args],
      {
        stdio: "inherit",
      }
    );

    let run = false;
    if (existsSync(basePath)) {
      run = true;
      runBase();
    }

    await new Promise((resolve) => {
      build.on("exit", resolve);
    });

    if (!run && existsSync(basePath)) {
      runBase();
    }
  }
};

const runBase = async () => {
  base = spawn(process.execPath, ["--enable-source-maps", basePath, ...args], {
    cwd: process.cwd(),
    stdio: "inherit",
  });

  await new Promise((resolve) => {
    base.on("exit", resolve);
  });
};

main();
