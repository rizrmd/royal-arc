#!/usr/bin/env node

if (
  !process.argv.includes("pre-commit") &&
  !process.argv.includes("post-commit")
) {
  console.log(`
▄▄▄         ▄· ▄▌ ▄▄▄· ▄▄▌
▀▄ █·▪     ▐█▪██▌▐█ ▀█ ██•
▐▀▀▄  ▄█▀▄ ▐█▌▐█▪▄█▀▀█ ██▪
▐█•█▌▐█▌.▐▌ ▐█▀·.▐█ ▪▐▌▐█▌▐▌
.▀  ▀ ▀█▄▀▪  ▀ •  ▀  ▀ .▀▀▀
`);
}

const { spawn, spawnSync } = require("child_process");
const { existsSync } = require("fs");
const { join, delimiter, dirname } = require("path");

const basePath = join(process.cwd(), ..."pkgs/base/main.js".split("/"));
const args = process.argv.slice(2);
const nodePath = [
  join(process.cwd(), "pkgs", "base", "node_modules"),
  join(process.cwd(), "pkgs", "base", "pkgs", "bundler", "node_modules"),
].join(delimiter);

const main = async () => {
  if (!existsSync(join(process.cwd(), "node_modules"))) {
    await new Promise((resolve) => {
      const pnpm = spawn("pnpm", ["i"], { stdio: "inherit", shell: true });
      pnpm.on("exit", resolve);
    });
  }

  while (true) {
    if (args.includes("devbase") || !existsSync(basePath)) {
      const res = spawnSync(
        process.execPath,
        ["pkgs/base/src/builder/base.mjs", ...args],
        {
          stdio: "inherit",
          env: {
            ...process.env,
            NODE_PATH: nodePath,
          },
          cwd: process.cwd(),
        }
      );

      if (res.status === 1) {
        break;
      }
    }

    if (existsSync(basePath)) {
      runBase();
    }
  }
};

const runBase = () => {
  const res = spawnSync(
    process.execPath,
    ["--enable-source-maps", basePath, ...args],
    {
      env: {
        ...process.env,
        NODE_PATH: join(dirname(basePath), "node_modules"),
      },
      cwd: process.cwd(),
      stdio: "inherit",
    }
  );

  if (res.status === 1) {
    process.exit(1);
  }
};

main();
